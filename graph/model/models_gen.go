// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"
)

type AllowComment struct {
	UserID       int  `json:"UserID"`
	PostID       int  `json:"PostID"`
	AllowComment bool `json:"AllowComment"`
}

type Comment struct {
	ID       int        `json:"id"`
	User     *User      `json:"user"`
	Text     string     `json:"text"`
	Date     time.Time  `json:"date"`
	Comments []*Comment `json:"comments,omitempty"`
}

type CommentsEdge struct {
	Node   *Comment `json:"node"`
	Cursor string   `json:"cursor"`
}

type Mutation struct {
}

type NewComment struct {
	UserID int    `json:"UserID"`
	PostID int    `json:"PostID"`
	Text   string `json:"Text"`
}

type NewCommentToComment struct {
	UserID    int    `json:"UserID"`
	CommentID int    `json:"CommentID"`
	Text      string `json:"Text"`
}

type NewPost struct {
	UserID       int    `json:"UserID"`
	Text         string `json:"Text"`
	AllowComment bool   `json:"AllowComment"`
}

type PageInfo struct {
	StartCursor string `json:"startCursor"`
	EndCursor   string `json:"endCursor"`
	HasNextPage bool   `json:"hasNextPage"`
}

type Post struct {
	ID           int        `json:"id"`
	AllowComment bool       `json:"allowComment"`
	User         *User      `json:"user"`
	Date         time.Time  `json:"date"`
	Text         string     `json:"text"`
	Comments     []*Comment `json:"comments,omitempty"`
}

type PostsEdge struct {
	Node   *Post  `json:"node"`
	Cursor string `json:"cursor"`
}

type Query struct {
}

type User struct {
	ID        int    `json:"id"`
	FirstName string `json:"firstName"`
	LastName  string `json:"lastName"`
}

type UsersEdge struct {
	Node   *User  `json:"node,omitempty"`
	Cursor string `json:"cursor"`
}
